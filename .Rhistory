allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<foods\\>)", replacement="food")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<forces\\>)", replacement="force")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<format\\>)", replacement="form")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<fostered\\>)", replacement="foster")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<fourphase\\>)", replacement="four phase")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<fivephase\\>)", replacement="five phase")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<fourth\\>)", replacement="four")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<freely\\>)", replacement="free")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<frequencies\\>)", replacement="frequency")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<frequently\\>)", replacement="frequent")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<frida\\>)", replacement="student_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<functionality\\>)", replacement="function")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gamelike\\>|\\<games\\>)", replacement="game")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gardening\\>|\\<gardens\\>)", replacement="garden")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gathered\\>)", replacement="gather")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gauging\\>)", replacement="gauge")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gauging\\>)", replacement="gauge")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<generally\\>|\\<generalized\\>)", replacement="general")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gets\\>)", replacement="get")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ginas\\>|\\<gina\\>)", replacement="example_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<girls\\>)", replacement="girl")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<got\\>)", replacement="get")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gravitational\\>)", replacement="gravity")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<groupâ€“togroup\\>|\\<smallgroup\\>|\\<wholegroup\\>)", replacement="group")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<growing\\>|\\<growth\\>)", replacement="grow")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<habitats\\>)", replacement="habitat")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<hairy\\>)", replacement="hair")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<hands\\>)", replacement="hand")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<hanna\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<hannah\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<happened\\>|\\<happening\\>|\\<happens\\>)", replacement="happen")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<helped\\>|\\<helpful\\>|\\<helps\\>)", replacement="help")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<holes\\>)", replacement="hole")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<homes\\>)", replacement="home")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<humans\\>)", replacement="human")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<illustration\\>|\\<illustrating\\>|\\<illustrates\\>)", replacement="illustrate")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<images\\>)", replacement="image")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<imagining\\>|\\<imaginary\\>)", replacement="imagination")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<implementation\\>|\\<implemented\\>|\\<implementing\\>|\\<implements\\>)", replacement="implement")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<improved\\>)", replacement="improve")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<impulses\\>)", replacement="impuls")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<inclines\\>)", replacement="incline")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<indoors\\>)", replacement="indoor")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ingredients\\>)", replacement="ingredient")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<intuitions\\>|\\<intuitively\\>)", replacement="intuition")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<invited\\>|\\<invites\\>)", replacement="invite")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<invoked\\>)", replacement="invoke")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<issues\\>)", replacement="issue")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<items\\>)", replacement="item")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<journaling\\>|\\<journals\\>)", replacement="journal")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<keeping\\>|\\<kept\\>)", replacement="keep")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<largest\\>)", replacement="large")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<larvaes\\>)", replacement="larvae")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<layered\\>|\\<layers\\>)", replacement="layer")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lead\\>|\\<led\\>)", replacement="leadership")
#The issue of leaves, leaving, and left. In excerpts, forms of the verbe "to leave" where changed to "leaving". Leaves as in plant material was not changed. Left as in non-rigt was unchanged.
#This changes were done directly in excerpts after reading the context.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lets\\>)", replacement="let")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lifted\\>|\\<lifting\\>)", replacement="lift") #as in the action of raising the potential energy of an object, not the object of transportation
#light as in not heavy changed to non_heavy, light as physical phenomenon kept, in light of -> in_light_of. Changed directely in excerpts.
#like split into like (as likeness) and like (as an affective verb -> like_affect)
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<likewise\\>)", replacement="like")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<limited\\>|\\<limits\\>)", replacement="limit")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<liquids\\>)", replacement="liquid")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<long\\>)", replacement="longterm")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lower\\>)", replacement="low")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mapped\\>)", replacement="map") #as in the action
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<maximally\\>)", replacement="maximal") #interesting use...
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mealworms\\>)", replacement="mealworm")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mechanized\\>)", replacement="mechanical")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<meetings\\>)", replacement="meeting")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<melted\\>)", replacement="melting")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<metacognitive\\>)", replacement="metacognition")
#met as in had a meeting changed directly in excerpts.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<methodological\\>)", replacement="methodology")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<midjune\\>|\\<midjanuary\\>)", replacement="study_month")
#min as in minutes changes directly in excerpts. Always [number]_minute, as in 20_minute
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mixed\\>)", replacement="mixing") #as in mixing materials together.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<moles\\>)", replacement="mole") #as in the animal not the number
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<motioning\\>)", replacement="motioned")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<motivate\\>|\\<motivating\\>)", replacement="motivation")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mounted\\>)", replacement="mount") #as in mounting something on a case
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<moved\\>|\\<movement\\>)", replacement="move")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<movies\\>)", replacement="movie")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<nearby\\>)", replacement="near")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<nests\\>)", replacement="nest")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<newtonian\\>)", replacement="newton")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<noises\\>)", replacement="noise")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<noticed\\>)", replacement="notice")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<objectives\\>)", replacement="objective")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<obtained\\>)", replacement="obtain")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<occurred\\>|\\<occurs\\>)", replacement="occur")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<offered\\>)", replacement="offer")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<older\\>|\\<olds\\>)", replacement="old")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<opened\\>)", replacement="open")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<operating\\>)", replacement="operate")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<orders\\>)", replacement="order") #as in putting things in order
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<organising\\>|\\<organised\\>|\\<organisational\\>|\\<organize\\>)", replacement="organise")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ornithologists\\>)", replacement="ornithologist")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<outdoors\\>)", replacement="outdoor")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<painter\\>|\\<painting\\>)", replacement="paint")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pennies\\>)", replacement="penny")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<performance\\>)", replacement="perform") #as in doing somehting for others to see.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<petting\\>)", replacement="pet")
#"physical science" -> physics, physical as related to physics -> "physics". All other instances of "physical" kept. Changes done directly in excerpts.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pieces\\>)", replacement="piece")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pigs\\>)", replacement="pig")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<planting\\>)", replacement="plant")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pointing\\>)", replacement="point")
#pose as in pose questions changed to ask in excerpt.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<possibly\\>)", replacement="possible")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<potentially\\>)", replacement="potential")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<programs\\>)", replacement="program")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<promoted\\>|\\<promoting\\>)", replacement="promote")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<prompting\\>)", replacement="prompt")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<purposes\\>)", replacement="purpose")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pushing\\>)", replacement="push")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<puzzling\\>)", replacement="puzzle")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<rains\\>|\\<rainfall\\>)", replacement="rain")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<randomly\\>)", replacement="random")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ranged\\>)", replacement="range")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ratings\\>)", replacement="rating")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<reactions\\>)", replacement="react")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<readings\\>|\\<reading\\>|\\<read\\>)", replacement="read")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<readily\\>)", replacement="ready")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<reasons\\>)", replacement="reason")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<recalling\\>)", replacement="recall")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<received\\>)", replacement="receiving")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<recognised\\>)", replacement="recognise")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<records\\>)", replacement="record")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<resonant\\|\\<resonated\\>)", replacement="resonate")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<respects\\>)", replacement="respect")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<responding\\|\\<responded\\|\\<responds\\>)", replacement="respond")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<resulted\\>)", replacement="result")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<returning\\>)", replacement="return")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<revealed\\>)", replacement="reveal")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<rocks\\>)", replacement="rock")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<routes\\>)", replacement="route")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<routines\\>)", replacement="routine")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<safely\\>)", replacement="safety")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<samples\\>)", replacement="sample")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sandy\\>)", replacement="sand")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<saw\\>|\\<seeing\\>|\\<seen\\>)", replacement="see")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<says\\>|\\<said\\>)", replacement="say")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<scales\\>)", replacement="scale")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<schooling\\>)", replacement="school")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<seasonal\\>|\\<seasons\\>)", replacement="season")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sections\\>)", replacement="section")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<seeds\\>)", replacement="seed")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<senses\\>)", replacement="sense")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<separated\\>|\\<seperately\\>)", replacement="separate")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sequences\\>)", replacement="sequence")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sat\\>|\\<setting\\>)", replacement="set") #as in the act of setting stuff up
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<shapes\\>)", replacement="shape")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sharable\\>|\\<sharing\\>|\\<shared\\>)", replacement="share")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<shells\\>)", replacement="shell")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<significance\\>)", replacement="significant")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sixth\\>)", replacement="six")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<slowmations\\>)", replacement="slowmation")
#small groups and small group changed to smallgroup directly in excerpts.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<smelling\\>|\\<smelly\\>)", replacement="smell")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<snails\\>)", replacement="snail")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<snowfall\\>)", replacement="snow")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<somethings\\>)", replacement="something")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<songs\\>)", replacement="song")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sorted\\>)", replacement="sort")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<spanned\\>)", replacement="spans")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<specifically\\>)", replacement="specific")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<speeding\\>)", replacement="speed")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<spilled\\>)", replacement="spill")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<splits\\>)", replacement="split")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<spontaneously\\>)", replacement="spontaneous")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<spots\\>)", replacement="spot")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<squeezed\\>)", replacement="squeeze")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<standardize\\>|\\<standards\\>)", replacement="standard")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<stereotypical\\>)", replacement="stereotype")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<stopped\\>)", replacement="stop")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<stored\\>)", replacement="store")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<strategies\\>|\\<strategic\\>)", replacement="strategy")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<strengths\\>)", replacement="strength")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<stretching\\>|\\<stretched\\>)", replacement="stretch")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<striped\\>)", replacement="stripes")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<striving\\>)", replacement="strive")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<suitability\\>)", replacement="suitable")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<survive\\>)", replacement="survival")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<stretching\\>|\\<stretched\\>)", replacement="stretch")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<symbolic\\>|\\<symbols\\>)", replacement="symbol")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<table2\\>|\\<table1\\>)", replacement="table")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<teams\\>)", replacement="team")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tells\\>)", replacement="tell")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<textbook\\>|\\<texts\\>)", replacement="text")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<things\\>)", replacement="thing")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<thinking\\>|\\<thinks\\>)", replacement="think")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tools\\>)", replacement="tool")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<totally\\>)", replacement="total")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<towards\\>)", replacement="toward")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<toys\\>)", replacement="toy")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tracing\\>)", replacement="trace")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tracks\\>)", replacement="track")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<training\\>)", replacement="train")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<transformed\\>)", replacement="transform")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<transitioning\\>|\\<transitioned\\>)", replacement="transition")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<triggered\\>)", replacement="triggers")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<trying\\>)", replacement="try")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tubs\\>)", replacement="tub")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<turned\\>)", replacement="turn") #as in focused their attention on, whereas "turns" relates to taking turns.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<twisting\\>|\\<twisted\\>)", replacement="twist") #as in the action of turning something, not "with a twist".
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<underlying\\>)", replacement="underlie")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<utilizing\\>|\\<utilized\\>)", replacement="utilize")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<valuable\\>|\\<valuing\\>|\\<valued\\>|\\<values\\>)", replacement="value") #hmmm..
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<variables\\>)", replacement="variable") #as in concept of "a variable" parameter
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<vignettes\\>)", replacement="vignette")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<vocabularies\\>)", replacement="vocabulary")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<went\\>)", replacement="go")
#whats changed to what is
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<walked\\>|\\<walks\\>>|\\<walking\\>>)", replacement="walk") # as in either "to walk" and "a walk".
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<wanted\\>)", replacement="want")
#wasnt changed to was not in excerpt
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<watching\\>)", replacement="watch")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<weeks\\>|\\<weekly\\>>)", replacement="week")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<watching\\>)", replacement="watch")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<wooden\\>)", replacement="wood")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<worked\\>)", replacement="work") #but not "workers"
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<worlds\\>)", replacement="world")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<younger\\>)", replacement="young")
#Spliting words
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<subtopic\\>|\\<subtopics\\>)", replacement="sub topic")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<threephase\\>)", replacement="three phase")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<twophase\\>)", replacement="two phase")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<threeweek\\>)", replacement="three week")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<videotaped\\>)", replacement="video taped")
#theres (as in there's) changed to "there is" directly in excerpts
#Specific names -> function in study
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<james\\>)", replacement="example_child") #example_child is a fictional child used in instructional materials.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tom\\>)", replacement="example_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<john\\>)", replacement="example_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<gina\\>)", replacement="example_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tony\\>)", replacement="example_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lilly\\>)", replacement="example_animal")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<thelmas\\>)", replacement="example_animal")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<jane\\>)", replacement="study_scienctist") #a rolemodel for childreni n the study??
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<peter\\>)", replacement="study_scienctist")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<chris\\>)", replacement="study_scienctist")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<johannah\\>)", replacement="study_child") #a child observed and analysed in the study
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lily\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lucy\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<markus\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<simon\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<susie\\>|\\<susies\\>|\\<susieastheball\\>|\\<susie3\\>)", replacement="study_child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<cora\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mrstreadwell\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<mrscasey\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<becky\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<shane\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<ppts\\>)", replacement="study_teacher")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pts\\>)", replacement="study_teacher")
#May 9th 2020: Changed Child: and other instances of named or specific children that appear in studies to "study_child".
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<wouassammeeschtendran\\>)", replacement="non-english-sentence")
##SYNONYMS
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<Empirical\\>|\\<theories\\>|\\<theories\\>|\\<theory\\>)", replacement="theory")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<certain\\>)", replacement="specific")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<elementary\\>)", replacement="primary")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<constitue element\\>)", replacement="phase")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<inquiry_based\\>|\\<inquirybased\\>|\\<inquiryframed\\>|\\<inquiryoriented\\>)", replacement="ibse")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<directed\\>|\\<directing\\>|\\<direct\\>|\\<instructed\\>|\\<instruct\\>|\\<steer\\>)", replacement="instruct_guide")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<curiosity\\>|\\<interesting\\>|\\<interests\\>|\\<interests\\>|\\<interested\\>)", replacement="interest")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<instructors\\>)", replacement="educators")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<teacher trainer\\>|\\<pilot centre trainer\\>|\\<the trainer\\>)", replacement="teacher_trainer")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<kids\\>)", replacement="child")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<likely\\>|\\<probably\\>)", replacement="probable")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<lives\\>|\\<live\\>)", replacement="live_habitat") #lives as in plural of life -> life.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pretence\\>|\\<pretend\\>|\\<pretending\\>|\\<makebelieve\\>|\\<played\\>|\\<playing\\>)", replacement="play")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<onus\\>|\\<responsibilities\\>)", replacement="responsibility")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<papers\\>)", replacement="article") #papers in plural only used as articles in excerpts.
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<photographing\\>|\\<photographer\\>|\\<photographed\\>|\\<photos\\>|\\<photo\\>|\\<pictogram\\>|\\<pictures\\>)", replacement="picture")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<playdough\\>)", replacement="playdoh")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<prints\\>)", replacement="print")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<previously\\>|\\<prior\\>)", replacement="previous")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<immediately\\|\\<promptly\\>>)", replacement="immediate")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<pupils\\|\\<leaerners\\>>)", replacement="pupil")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<reasoning\\>)", replacement="thinking")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<schoolyard\\>)", replacement="playground")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<sciencey\\>)", replacement="sciencelike")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<book\\>)", replacement="text")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<at times\\>|\\<at other times\\>>)", replacement="sometimes")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<track\\>|\\<trace\\>>)", replacement="track_trace")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tubs\\>|\\<bathtub\\>>)", replacement="tub")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<tv\\>)", replacement="television")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<vs\\>)", replacement="versus")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<secondgrade\\>)", replacement="2ndgrade")
allEmpirical <- tm_map(allEmpirical, content_transformer(gsub), pattern = "(\\<first graders\\>)", replacement="1stgrade")
wordstoremove<-c(stopwords("english"),"can","also","although","may","maybe","moreover","mostly","onto","per se", "really","therefore","though","thus",
"xl011","xl021","xl051","xl071","xn011","xn031","xn051","xn071","xq011","xq031","xq041","xq051","xs021","xs091","xs111","xs121",
"2013appendixfp10","20132014","1b","p234","p141")
#allFilesx <- tm_map(allFilesx, removeWords, c("endoffile"))
allEmpirical<-tm_map(allEmpirical,stripWhitespace)
myWordNetwork <- function (txt,j.words) {
# Clean data
#remove capitalization
#corpus.temp          <- tm_map(corpus, tolower)
#Remove punctuations and other unnecessary things
#corpus.removed.punc  <- tm_map(corpus.temp, removePunctuation)
#Remove numbers
#corpus.removed.numb  <- tm_map(corpus.removed.punc, removeNumbers)
#Remove Whitespaces
#corpus.removed.white <- tm_map(corpus.removed.punc, stripWhitespace)
#corpus               <- Corpus(DataframeSource(data.frame(data)))
#prepare for stemming (language is english, but TM has a package for other
#languages)
#corpus.temp <- corpus.removed.white
#corpus.copy  <- corpus.temp
#corpus.temp  <- tm_map(corpus.temp, stemDocument, language = language)
#corpus.final <- tm_map(corpus.temp, stemCompletion,
#                      dictionary = corpus.copy)
#corpus.final<-corpus.temp
#Prepare to remove "stopwords" such as "A", "The", e.t.c.
# keep "declarative words"
#my.stopwords <- stopwords("english")
#my.stopwords <- my.stopwords[!(my.stopwords %in% j.words)]
#Remove stopwrods
#corpus.crop <- tm_map(corpus.removed.white,removeWords,c(my.stopwords))
# Create edge list for export
edge.list <-strsplit(as.matrix(txt), split = " ")[[1]]
#Remove unnecessary
#edge.list<-as.matrix(corpus.final[[1]])
#edge.list <- edge.list[edge.list!=""]
#edge.list<-strsplit(edge.list,split=" ")
# index of "declarative words" (the -1 is because we're removing first and
# last word to make it into a word-network
node.num <- length(edge.list[!(edge.list %in% j.words)]) - 1
#Create matrix to be exported
export.edge.list <- array("",dim=c(node.num,2))
#Set column names as per Gephi requirements
#colnames(export.edge.list) <- c("Source","Target","Label")
# Put source word except the "joining words into the matrix to be exported
export.edge.list[,1] <- edge.list[!(edge.list %in% j.words)][-length(edge.list[!(edge.list %in% j.words)])]
# put the target word except the "joining words into the matrix to be exported
export.edge.list[,2] <- edge.list[!(edge.list %in% j.words)][-1]
#Go through the joining words and put them in
# for(i in j.words) {
#  for (j in which(edge.list %in% i)) {
#  export.edge.list[j - sum(!which(edge.list %in% j.words) > j), 3] <- i
# }
#}
return(export.edge.list)
}
edgelistsEmpirical<-lapply(allEmpirical,myWordNetwork,j.words=wordstoremove)
graphsEmpirical<-list()
for (i in 1:35){
graphsEmpirical[[i]]<-graph.edgelist(edgelists[[i]],directed=T)
}
allEdgeEmpirical<-rbind(edgelistsEmpirical[[1]],edgelistsEmpirical[[2]],edgelistsEmpirical[[3]],edgelistsEmpirical[[4]],edgelistsEmpirical[[5]],edgelistsEmpirical[[6]],edgelistsEmpirical[[7]],edgelistsEmpirical[[8]],edgelistsEmpirical[[9]],edgelistsEmpirical[[10]],
edgelistsEmpirical[[11]],edgelistsEmpirical[[12]],edgelistsEmpirical[[13]],edgelistsEmpirical[[14]],edgelistsEmpirical[[15]],edgelistsEmpirical[[16]],edgelistsEmpirical[[17]],edgelistsEmpirical[[18]],edgelistsEmpirical[[19]],edgelistsEmpirical[[20]],
edgelistsEmpirical[[21]],edgelistsEmpirical[[22]],edgelistsEmpirical[[23]],edgelistsEmpirical[[24]],edgelistsEmpirical[[25]],edgelistsEmpirical[[26]],edgelistsEmpirical[[27]],edgelistsEmpirical[[28]],edgelistsEmpirical[[29]],edgelistsEmpirical[[30]],
edgelistsEmpirical[[31]],edgelistsEmpirical[[32]],edgelistsEmpirical[[33]],edgelistsEmpirical[[34]],edgelistsEmpirical[[35]])
articlesE<-lapply(edgelistsEmpirical,graph.edgelist,directed=T)
for (i in 1:length(articlesE)){
E(articlesE[[i]])$weight<-1
articlesE[[i]]<-simplify(articlesE[[i]],edge.attr.comb="sum")
articlesE[[i]]<-delete.vertices(articlesE[[i]],which(V(articlesE[[i]])$name=="break"))
}
article01E<-graph.edgelist(edgelistsEmpirical[[1]],directed=T)
article02E<-graph.edgelist(edgelistsEmpirical[[2]],directed=T)
article03E<-graph.edgelist(edgelistsEmpirical[[3]],directed=T)
article04E<-graph.edgelist(edgelistsEmpirical[[4]],directed=T)
article05E<-graph.edgelist(edgelistsEmpirical[[5]],directed=T)
article06E<-graph.edgelist(edgelistsEmpirical[[6]],directed=T)
article07E<-graph.edgelist(edgelistsEmpirical[[7]],directed=T)
article08E<-graph.edgelist(edgelistsEmpirical[[8]],directed=T)
article09E<-graph.edgelist(edgelistsEmpirical[[9]],directed=T)
article10E<-graph.edgelist(edgelistsEmpirical[[10]],directed=T)
article11E<-graph.edgelist(edgelistsEmpirical[[11]],directed=T)
article12E<-graph.edgelist(edgelistsEmpirical[[12]],directed=T)
article13E<-graph.edgelist(edgelistsEmpirical[[13]],directed=T)
article14E<-graph.edgelist(edgelistsEmpirical[[14]],directed=T)
article15E<-graph.edgelist(edgelistsEmpirical[[15]],directed=T)
article16E<-graph.edgelist(edgelistsEmpirical[[16]],directed=T)
article17E<-graph.edgelist(edgelistsEmpirical[[17]],directed=T)
article18E<-graph.edgelist(edgelistsEmpirical[[18]],directed=T)
article19E<-graph.edgelist(edgelistsEmpirical[[19]],directed=T)
article20E<-graph.edgelist(edgelistsEmpirical[[20]],directed=T)
article21E<-graph.edgelist(edgelistsEmpirical[[21]],directed=T)
article22E<-graph.edgelist(edgelistsEmpirical[[22]],directed=T)
article23E<-graph.edgelist(edgelistsEmpirical[[23]],directed=T)
article24E<-graph.edgelist(edgelistsEmpirical[[24]],directed=T)
article25E<-graph.edgelist(edgelistsEmpirical[[25]],directed=T)
article26E<-graph.edgelist(edgelistsEmpirical[[26]],directed=T)
article27E<-graph.edgelist(edgelistsEmpirical[[27]],directed=T)
article28E<-graph.edgelist(edgelistsEmpirical[[28]],directed=T)
article29E<-graph.edgelist(edgelistsEmpirical[[29]],directed=T)
article30E<-graph.edgelist(edgelistsEmpirical[[30]],directed=T)
article31E<-graph.edgelist(edgelistsEmpirical[[31]],directed=T)
article32E<-graph.edgelist(edgelistsEmpirical[[32]],directed=T)
article33E<-graph.edgelist(edgelistsEmpirical[[33]],directed=T)
article34E<-graph.edgelist(edgelistsEmpirical[[34]],directed=T)
article35E<-graph.edgelist(edgelistsEmpirical[[35]],directed=T)
allNetEmpirical<-graph.edgelist(allEdgeEmpirical,directed=T)
E(allNetEmpirical)$weight<-1
allNetEmpirical<-delete.vertices(allNetEmpirical,v = which(V(allNetEmpirical)$name=="break"))
allNetEmpirical<-simplify(allNetEmpirical,remove.multiple=T,edge.attr.comb=list(weight="sum"))
prE<-page.rank(allNetEmpirical)
V(allNetEmpirical)$pr<-prE$vector
sort(prE$vector,decreasing = T)[1:10]
fgE<-fastgreedy.community(as.undirected(allNetEmpirical))
write.csv(V(allNetEmpirical)$name,"listNodesEmpirical.csv")
#run createTheoreticalNetworks.R and createEmpiricalNetworks.r first
#you should have an object called: allNetTheoretical and an object called allNetEmpirical
#These are graph objects, weighted and directed
##create bacbone versions of the graphs
source("R_scripts/backboneExtraction.r")
V(allNetEmpirical)$id<-V(allNetEmpirical)$name
V(allNetTheoretical)$id<-V(allNetTheoretical)$name
freq<-strength(allNetTheoretical,mode = "all")
theoreticalBB<-backboneNetwork(allNetTheoretical,evalFunc = 1, alpha = 0.001)
V(theoreticalBB)$freq<-strength(allNetTheoretical,mode = "all")
empiricalBB<-backboneNetwork(allNetEmpirical,evalFunc = 1, alpha = 0.001)
V(empricalBB)$freq<-strength(allNetEmpirical,mode = "all")
####Create a map based on fast-greedy algorithm
fgT<-fastgreedy.community(as.undirected(allNetTheoretical))
fgTBB<-fastgreedy.community(as.undirected(theoreticalBB))
fgE<-fastgreedy.community(as.undirected(allNetEmpirical))
fgEBB<-fastgreedy.community(as.undirected(empiricalBB))
V(theoreticalBB)$fastgreedy<-fgTBB$membership
write.graph(theoreticalBB,"theoretical28052020.graphml",format="graphml")
V(empiricalBB)$fastgreedy<-fgEBB$membership
write.graph(empiricalBB,"empirical28052020.graphml",format="graphml")
V(empiricalBB)$freq<-strength(allNetEmpirical,mode = "all")
####Create a map based on fast-greedy algorithm
fgT<-fastgreedy.community(as.undirected(allNetTheoretical))
fgTBB<-fastgreedy.community(as.undirected(theoreticalBB))
fgE<-fastgreedy.community(as.undirected(allNetEmpirical))
fgEBB<-fastgreedy.community(as.undirected(empiricalBB))
V(theoreticalBB)$fastgreedy<-fgTBB$membership
write.graph(theoreticalBB,"theoretical28052020.graphml",format="graphml")
V(empiricalBB)$fastgreedy<-fgEBB$membership
write.graph(empiricalBB,"empirical28052020.graphml",format="graphml")
mapTheoretical<-makemap(fgTBB$membership,theoreticalBB)
mapEmpirical<-makemap(fgEBB$membership,empiricalBB)
mapTBB<-backboneNetwork(mapTheoretical,0.005,1)
V(mapTBB)$n_words<-V(mapTheoretical)$n_words
mapTBB<-decompose.graph(mapTBB)[[1]]
fgMTBB<-fastgreedy.community(as.undirected(mapTBB))
V(mapTBB)$fastgreedy<-fgMTBB$membership
write.graph(mapTBB,"mapTBB28052020.graphml",format="graphml")
mapEBB<-backboneNetwork(mapEmpirical,0.005,1)
V(mapEBB)$n_words<-V(mapEmpirical)$n_words
mapEBB<-decompose.graph(mapEBB)[[1]]
fgMEBB<-fastgreedy.community(as.undirected(mapEBB))
V(mapEBB)$fastgreedy<-fgMEBB$membership
write.graph(mapEBB,"mapEBB28052020.graphml",format="graphml")
mapTheoreticalrem<-delete.vertices(mapTheoretical,1)
mapTremBB<-backboneNetwork(mapTheoreticalrem,0.005,1)
V(mapTremBB)$n_words<-V(mapTheoreticalrem)$n_words
mapTremBB<-decompose.graph(mapTremBB)[[1]]
fgMTremBB<-fastgreedy.community(as.undirected(mapTremBB))
V(mapTremBB)$fastgreedy<-fgMTremBB$membership
write.graph(mapTremBB,"mapTBBrem28052020.graphml",format="graphml")
mapEmpiricalrem<-delete.vertices(mapEmpirical,13)
mapEremBB<-backboneNetwork(mapEmpiricalrem,0.005,1)
V(mapEremBB)$n_words<-V(mapEmpiricalrem)$n_words
write.graph(mapEremBB,"mapEBB13rem28052020.graphml",format="graphml")
mapEmpiricalrem<-delete.vertices(mapEmpirical,13)
mapEremBB<-backboneNetwork(mapEmpiricalrem,0.005,1)
V(mapEremBB)$n_words<-V(mapEmpiricalrem)$n_words
mapEremBB<-decompose.graph(mapEremBB)[[1]]
fgMEremBB<-fastgreedy.community(as.undirected(mapEremBB))
V(mapEremBB)$fastgreedy<-fgMEremBB$membership
write.graph(mapEremBB,"mapEBB13rem28052020.graphml",format="graphml")
#Load the files we need
allTheoretical <-Corpus(DirSource("textsTheoretical", encoding="UTF-8"), readerControl = list(language="lat"))
mapTBB<-backboneNetwork(mapTheoretical,0.005,1)
V(mapTBB)$n_words<-V(mapTheoretical)$n_words
mapTBB<-decompose.graph(mapTBB)[[1]]
fgMTBB<-fastgreedy.community(as.undirected(mapTBB))
V(mapTBB)$fastgreedy<-fgMTBB$membership
write.graph(mapTBB,"mapTBB28052020.graphml",format="graphml")
mapEBB<-backboneNetwork(mapEmpirical,0.005,1)
V(mapEBB)$n_words<-V(mapEmpirical)$n_words
mapEBB<-decompose.graph(mapEBB)[[1]]
fgMEBB<-fastgreedy.community(as.undirected(mapEBB))
V(mapEBB)$fastgreedy<-fgMEBB$membership
write.graph(mapEBB,"mapEBB28052020.graphml",format="graphml")
mapTheoreticalrem<-delete.vertices(mapTheoretical,1)
mapTremBB<-backboneNetwork(mapTheoreticalrem,0.005,1)
V(mapTremBB)$n_words<-V(mapTheoreticalrem)$n_words
mapTremBB<-decompose.graph(mapTremBB)[[1]]
fgMTremBB<-fastgreedy.community(as.undirected(mapTremBB))
V(mapTremBB)$fastgreedy<-fgMTremBB$membership
write.graph(mapTremBB,"mapTBBrem28052020.graphml",format="graphml")
mapEmpiricalrem<-delete.vertices(mapEmpirical,13)
mapEremBB<-backboneNetwork(mapEmpiricalrem,0.005,1)
V(mapEremBB)$n_words<-V(mapEmpiricalrem)$n_words
mapEremBB<-decompose.graph(mapEremBB)[[1]]
fgMEremBB<-fastgreedy.community(as.undirected(mapEremBB))
V(mapEremBB)$fastgreedy<-fgMEremBB$membership
write.graph(mapEremBB,"mapEBB13rem28052020.graphml",format="graphml")
as_edgelist(theoreticalBB,names=T)
length(as_edgelist(theoreticalBB,names=T)[,1])
E(theoreticalBB)
E(theoreticalBB)$weight
edgesTheoretical<-as_edgelist(theoreticalBB)
edgesTheoretical<-data.frame(edgesTheoretical,E(theoreticalBB)$weight)
write.csv(edgesTheoretical,"theoreticalLinks.csv",sep = ";")
write.csv(edgesTheoretical,"theoreticalLinks.csv")
E(theoreticalBB)[2]
E(theoreticalBB)$weight[2]
edgesEmpirical<-as_edgelist(empiricalBB)
edgesEmpirical<-data.frame(edgesEmpirical,E(empiricalBB)$weight)
write.csv(edgesEmpirical,"empiricalLinks.csv")
library(tm)
stopwords("english")
length(stopwords("english"))
